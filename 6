# Place a sprite for lives
heart = codesters.Sprite("Heart_0b9", -220, 200)
heart.set_size(2)
# Text for lives
lives = 10
lives_text = codesters.Text(str(lives), -180, 200, "red")
lives_text.set_size(2)
# Text for bullets
bullets = 10
ammo = codesters.Sprite("Ammo_066", -220, 165)
ammo_text = codesters.Text(str(bullets), -180, 165, "yellow")
ammo_text.set_size(2)

# Set up the scene
stage.set_background("jupiter")
stage.disable_right_wall()
stage.disable_left_wall()
stage.set_bounce(0.2)
stage.disable_floor()
# Display score on the screen
score = 0
score_png = codesters.Sprite("Score_3ad", -205, 135)
score_text = codesters.Text(str(score), -150, 135, "blue")
score_text.set_size(2)
# Add a character and give it negative speed
soldier = codesters.Sprite("Soldier_no_Fire_V2_8c0")
soldier.set_y_speed(-5)
# Add a platform and initially set its speed to 0
platform = codesters.Sprite("Platform_c9b", 0, -200)
platform.set_x_speed(0)
# Variable for loop termination
a = 0

# Function for jumping
def jump():
    soldier.get_x()
    # Simulate jet pack fire
    fire_jet = codesters.Sprite("Fire_Jet_pack_af0", soldier.get_x() - 15, soldier.get_y() - 15)
    fire_jet.hide()
    soldier.jump(10)
    # Set x speed to 0 to prevent character from moving with the platform
    soldier.set_x_speed(0)

# Function for moving left
def move_left():
    soldier.move_left(50)

# Function for moving right
def move_right():
    soldier.move_right(50)
    # Set x speed to 0 to prevent character from moving with the platform
    soldier.set_x_speed(0)

stage.event_key("left", move_left)
stage.event_key("right", move_right)
stage.event_key("up", jump)

# Function to check for hits
def strike(sprite, hit_sprite):
    global score
    global score_text
    name = hit_sprite.get_image_name()
    
    # Check for win condition
    if score >= 5:
        # Disable loop and all events
        a = 1
        stage.remove_all_events()
        soldier.hide()
        text = codesters.Text("You Win !!!", 0, 0, "yellow")
        text.set_size(4)
    
    if name == "Enemy_1_8ad":
        score += 1
        stage.remove_sprite(hit_sprite)
        stage.remove_sprite(score_text)
        score_text = codesters.Text(str(score), -150, 135, "blue")
        score_text.set_size(2)
    
    if name == "Enemy_2_d13":
        stage.remove_sprite(hit_sprite)
        score += 1
        stage.remove_sprite(hit_sprite)
        stage.remove_sprite(score_text)
        score_text = codesters.Text(str(score), -150, 135, "blue")
        score_text.set_size(2)
    
    if name == "Enemy_3_549":
        stage.remove_sprite(hit_sprite)
        score += 1
        stage.remove_sprite(hit_sprite)
        stage.remove_sprite(score_text)
        score_text = codesters.Text(str(score), -150, 135, "blue")
        score_text.set_size(2)

# Function for shooting
def shot():
    global bullets
    global ammo_text
    sound = codesters.Sound("drum_bell")
    sound.play()
    stage.remove_sprite(ammo_text)
    bullets -= 1
    # Update bullet counter
    ammo_text = codesters.Text(str(bullets), -180, 165, "yellow")
    ammo_text.set_size(2)
    # Reload
    if bullets <= 0:
        bullets = 0
        stage.wait(0.5)
        bullets = 10
    
    # Simulate gun fire
    sprite = codesters.Sprite("Fire_a0d", soldier.get_x() + 5, soldier.get_y())
    sprite.set_size(0.1)
    sprite.hide()
    # Spawn a bullet
    bullet = codesters.Sprite("Bullet_a84", soldier.get_x() + 5, soldier.get_y())
    bullet.set_y_speed(0)
    bullet.set_x_speed(5)
    
    bullet.event_collision(strike)

stage.event_key("space", shot)





